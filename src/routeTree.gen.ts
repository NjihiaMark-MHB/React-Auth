/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StyleGuideImport } from './routes/style-guide'
import { Route as LoginRouteImport } from './routes/_login/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as LoginIndexImport } from './routes/_login/index'
import { Route as LoginSignUpImport } from './routes/_login/sign-up'
import { Route as AuthenticatedSeriesImport } from './routes/_authenticated/series'
import { Route as AuthenticatedMoviesImport } from './routes/_authenticated/movies'
import { Route as AuthenticatedHomeImport } from './routes/_authenticated/home'
import { Route as AuthenticatedBookmarkedImport } from './routes/_authenticated/bookmarked'

// Create/Update Routes

const StyleGuideRoute = StyleGuideImport.update({
  id: '/style-guide',
  path: '/style-guide',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  id: '/_login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoginRouteRoute,
} as any)

const LoginSignUpRoute = LoginSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => LoginRouteRoute,
} as any)

const AuthenticatedSeriesRoute = AuthenticatedSeriesImport.update({
  id: '/series',
  path: '/series',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedMoviesRoute = AuthenticatedMoviesImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedBookmarkedRoute = AuthenticatedBookmarkedImport.update({
  id: '/bookmarked',
  path: '/bookmarked',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_login': {
      id: '/_login'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/style-guide': {
      id: '/style-guide'
      path: '/style-guide'
      fullPath: '/style-guide'
      preLoaderRoute: typeof StyleGuideImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/bookmarked': {
      id: '/_authenticated/bookmarked'
      path: '/bookmarked'
      fullPath: '/bookmarked'
      preLoaderRoute: typeof AuthenticatedBookmarkedImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/movies': {
      id: '/_authenticated/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof AuthenticatedMoviesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/series': {
      id: '/_authenticated/series'
      path: '/series'
      fullPath: '/series'
      preLoaderRoute: typeof AuthenticatedSeriesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_login/sign-up': {
      id: '/_login/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LoginSignUpImport
      parentRoute: typeof LoginRouteImport
    }
    '/_login/': {
      id: '/_login/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof LoginRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedBookmarkedRoute: typeof AuthenticatedBookmarkedRoute
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRoute
  AuthenticatedMoviesRoute: typeof AuthenticatedMoviesRoute
  AuthenticatedSeriesRoute: typeof AuthenticatedSeriesRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedBookmarkedRoute: AuthenticatedBookmarkedRoute,
  AuthenticatedHomeRoute: AuthenticatedHomeRoute,
  AuthenticatedMoviesRoute: AuthenticatedMoviesRoute,
  AuthenticatedSeriesRoute: AuthenticatedSeriesRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface LoginRouteRouteChildren {
  LoginSignUpRoute: typeof LoginSignUpRoute
  LoginIndexRoute: typeof LoginIndexRoute
}

const LoginRouteRouteChildren: LoginRouteRouteChildren = {
  LoginSignUpRoute: LoginSignUpRoute,
  LoginIndexRoute: LoginIndexRoute,
}

const LoginRouteRouteWithChildren = LoginRouteRoute._addFileChildren(
  LoginRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LoginRouteRouteWithChildren
  '/style-guide': typeof StyleGuideRoute
  '/bookmarked': typeof AuthenticatedBookmarkedRoute
  '/home': typeof AuthenticatedHomeRoute
  '/movies': typeof AuthenticatedMoviesRoute
  '/series': typeof AuthenticatedSeriesRoute
  '/sign-up': typeof LoginSignUpRoute
  '/': typeof LoginIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/style-guide': typeof StyleGuideRoute
  '/bookmarked': typeof AuthenticatedBookmarkedRoute
  '/home': typeof AuthenticatedHomeRoute
  '/movies': typeof AuthenticatedMoviesRoute
  '/series': typeof AuthenticatedSeriesRoute
  '/sign-up': typeof LoginSignUpRoute
  '/': typeof LoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_login': typeof LoginRouteRouteWithChildren
  '/style-guide': typeof StyleGuideRoute
  '/_authenticated/bookmarked': typeof AuthenticatedBookmarkedRoute
  '/_authenticated/home': typeof AuthenticatedHomeRoute
  '/_authenticated/movies': typeof AuthenticatedMoviesRoute
  '/_authenticated/series': typeof AuthenticatedSeriesRoute
  '/_login/sign-up': typeof LoginSignUpRoute
  '/_login/': typeof LoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/style-guide'
    | '/bookmarked'
    | '/home'
    | '/movies'
    | '/series'
    | '/sign-up'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/style-guide'
    | '/bookmarked'
    | '/home'
    | '/movies'
    | '/series'
    | '/sign-up'
    | '/'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_login'
    | '/style-guide'
    | '/_authenticated/bookmarked'
    | '/_authenticated/home'
    | '/_authenticated/movies'
    | '/_authenticated/series'
    | '/_login/sign-up'
    | '/_login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRouteRoute: typeof LoginRouteRouteWithChildren
  StyleGuideRoute: typeof StyleGuideRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRouteRoute: LoginRouteRouteWithChildren,
  StyleGuideRoute: StyleGuideRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_login",
        "/style-guide"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/bookmarked",
        "/_authenticated/home",
        "/_authenticated/movies",
        "/_authenticated/series"
      ]
    },
    "/_login": {
      "filePath": "_login/route.tsx",
      "children": [
        "/_login/sign-up",
        "/_login/"
      ]
    },
    "/style-guide": {
      "filePath": "style-guide.tsx"
    },
    "/_authenticated/bookmarked": {
      "filePath": "_authenticated/bookmarked.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/home": {
      "filePath": "_authenticated/home.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/movies": {
      "filePath": "_authenticated/movies.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/series": {
      "filePath": "_authenticated/series.tsx",
      "parent": "/_authenticated"
    },
    "/_login/sign-up": {
      "filePath": "_login/sign-up.tsx",
      "parent": "/_login"
    },
    "/_login/": {
      "filePath": "_login/index.tsx",
      "parent": "/_login"
    }
  }
}
ROUTE_MANIFEST_END */
